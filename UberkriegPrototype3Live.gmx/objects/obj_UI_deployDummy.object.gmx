<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_DeplayWin_curosr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate price

//set all prices to 0mk
var i =1;
for( i = 1 ; i &lt;= 13 ; i++ )
    {
    price[i] = 0; 
    worth[i] = 0; 
    }
    

    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate

//stop animation
image_speed = 0;

depth = UI_DEPTH_WIN

//set alarm to Cursor move speed
alarm[1] = 1;

//navigationi math set up

start_x = view_xview+132;
start_y = view_yview+96;

//just created switch
just_created = true ;

col = 0; //1 of 2
row = 0; // 1 of 7

col_size = 240 ;
row_size = 36 ;

x = start_x;
y = start_y;

 

//variable needed to cancel deploy
no_deploy = false;
//inten display variable
display_on = false;

//math variables
display_cost = 0;
display_difference = 0;

//Deploy modifyer (COFX)
cost_mod = 1;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate Alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press "B"

if  global.ip_B_pressed
    {
    instance_create(global.posX*24,global.posY*24,obj_deployDummyCursor);
    instance_destroy();
    }

    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate Cursor via master controller

image_index = global.cursorFrameIndex ;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Keyboard Navigation

//      check for key delay on press
if (global.ip_up_pressed   ||
    global.ip_down_pressed ||
    global.ip_left_pressed ||
    global.ip_right_pressed){
        global.cursorKey_delay = global.cursorKey_startspeed;
        }
        
//      reset key delay on release
if (global.ip_up_released   ||
    global.ip_down_released ||
    global.ip_left_released ||
    global.ip_right_released){
        alarm[1] = 0;
        global.cursorKey_delay = global.cursorKey_startspeed ;
        }
        
if (alarm[1] = -1 )
    {
    switch(global.ip_nav)
        {
        case(0):
            alarm[1] = 0;
            global.cursorkey_delay = global.cursorKey_startspeed ;
            break;
        
        case 8 : //up
            if ( row =0) {
                row = 6; 
                y = start_y + (row*row_size);    
                }
            else {
                row -= 1;
                y = start_y + (row*row_size);
                }
            //juice then break
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        
        case 2 : //down
            if ( row &lt; 6) {
                row += 1; //row +1
                y = start_y + (row*row_size);    
                }
            else {
                row = 0;
                y = start_y;
                }
            //juice then break
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        
        case 4 : //left
            if (col == 0){
                col = 1; //change col
                x = start_x + col_size; //change location
                }
            else{
                col = 0;
                x = start_x; 
                }
            //juce then break
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;  
                    
        case 6 : //right
                if (col == 0){
                    col = 1; //change col
                    x = start_x+ col_size; //change location
                    }
                else{
                    col = 0;
                    x = start_x; 
                    }
                //juce then break   
                scr_cursorKey_juice(1,global.cursorKey_sfx);
                break;  
        }
            
              
          
    

        }
        
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Nav

if (mouse_check_button_pressed(mb_left)){
    //check if cursor is inbound
    if( mouse_x &gt; start_x and mouse_x &lt; start_x + col_size*2 and mouse_y &gt; start_y and mouse_y &lt; start_y + row_size*7){
        //deploy if col and row match mouse pos
        if (  col = (mouse_x - start_x) div col_size and row = (mouse_y - start_y) div row_size ){
            unit_has_deployed = false;
            no_deploy = false;
            //check col
            if col == 0 {
                //check row
                switch row {
                    case 0: //Light Infantry
                        if (global.P_Turn.funds &gt;= price[1]){
                            global.P_Turn.funds -= price[1];
                            scr_setUnit(obj_unit_LightInfantry,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[1]
                            unit_has_deployed = true;
                            }
                            break;
                    case 1: //Heavy Infantry (mechanized Infnatry)
                        if (global.P_Turn.funds &gt;= price[2]){
                            global.P_Turn.funds -= price[2];
                            scr_setUnit(obj_unit_HeavyInfantry,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[2];
                            unit_has_deployed = true;
                            }
                            break;
                    case 2: //Long Gun
                        if (global.P_Turn.funds &gt;= price[3]){
                            global.P_Turn.funds -= price[3];
                            scr_setUnit(obj_unit_LongGun,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[3];
                            unit_has_deployed = true;
                            }
                            break;
                    case 3: //Field Officer (commander)
                        if (global.P_Turn.funds &gt;= price[4]){
                            global.P_Turn.funds -= price[4];
                            scr_setUnit(obj_unit_Officer,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[4];
                            unit_has_deployed = true;
                            }
                            break; 
                    case 4: //Recon
                        if (global.P_Turn.funds &gt;= price[5]){
                            global.P_Turn.funds -= price[5];
                            scr_setUnit(obj_unit_Recon,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[5];
                            unit_has_deployed = true;
                            }
                            break;
                    case 5: //APC
                        if (global.P_Turn.funds &gt;= price[6]){
                            global.P_Turn.funds -= price[6];
                            scr_setUnit(obj_unit_APC,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[6];
                            unit_has_deployed = true;
                            }
                            break;
                    case 6: //cancel
                        no_deploy = true;
                        break;
                    }
                }            
            if col == 1 {
                //check row
                switch row {
                    case 0: //Light Tank
                    if (global.P_Turn.funds &gt;= price[7]) {
                            global.P_Turn.funds -= price[7];
                            scr_setUnit(obj_unit_LightTank,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[7];
                            unit_has_deployed = true;
                            }
                            break;
                    case 1: //Artillery
                        if (global.P_Turn.funds &gt;= price[8]){
                            global.P_Turn.funds -= price[8];
                            scr_setUnit(obj_unit_Artillery,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[8];
                            unit_has_deployed = true;
                            }
                            break; 
                    case 2: //IFV (AA)
                        if (global.P_Turn.funds &gt;= price[9]){
                            global.P_Turn.funds -= price[9];
                            scr_setUnit(obj_unit_AA,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[9];
                            unit_has_deployed = true;
                            }
                            break;  
                    case 3: //Covert Op.
                        if (global.P_Turn.funds &gt;= price[10]){
                            global.P_Turn.funds -= price[10];
                            scr_setUnit(obj_unit_CovertOp,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[10];
                            unit_has_deployed = true;
                            }
                            break;; 
                    case 4: //Heavy Tank
                        if (global.P_Turn.funds &gt;= price[11]){
                            global.P_Turn.funds -= price[11];
                            scr_setUnit(obj_unit_HeavyTank,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[11];
                            unit_has_deployed = true;
                            }
                            break;
                    case 5: //Rocket
                        if (global.P_Turn.funds &gt;= price[12]){
                            global.P_Turn.funds -= price[12];
                            scr_setUnit(obj_unit_Rocket,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[12];
                            unit_has_deployed = true;
                            }
                            break;
                    case 6: //Land Cruiser
                        if (global.P_Turn.funds &gt;= price[13]){
                            global.P_Turn.funds -= price[13];
                            scr_setUnit(obj_unit_LandCruiser,global.posX,global.posY,global.P_Turn.number);
                            //set unit's worth
                            obj_map.units[global.posX,global.posY].cost = worth[13];
                            unit_has_deployed = true;
                            }
                            break;
                        }        
                    }
                if no_deploy {
                    instance_activate_object(obj_deployDummyCursor);
                    
                    //set menu exit delay to prevent unwanted view scrolling
                    obj_deployDummyCursor.alarm[3] = global.exit_delay;
                    obj_deployDummyCursor.menuExitDelay = true;
                    
                    //reactivate dummy deploy curosr
                    instance_activate_object(obj_deployDummyCursor);
                    instance_destroy();
                    //second deplay menu is created for some reson when another base is selected first &amp; second base is select to deploy while cursor on first base is showing deploy icon...temp solution = nuke all deploy menus
                    }
                if unit_has_deployed {
                    if obj_map.units[global.posX,global.posY] !=0{
                        if obj_map.units[global.posX,global.posY] !=0{
                            with(obj_map.units[global.posX,global.posY]){
                                team = global.P_Turn.team;
                                state = "idle";
                                hp = 1;
                                dummy = true;
                                HP_hidden = true;
                                 //check for COP and SCOP
                                if global.P_Turn.CO.COP_on obj_map.units[global.posX,global.posY].COP = true ;
                                if global.P_Turn.CO.SCOP_on obj_map.units[global.posX,global.posY].SCOP = true ;
                                //if unit is Covert.op, hide
                                //if (unit_index = 10){ 
                                    //isHidden = true;
                                    //is_observable = false;
                                    //if(global.P_View[global.P_Turn.number,ownership]) isObservable = true;
                                    //}
                                if global.net_mode = 2 {
                                    ds_map_clear(global.map_out);
                                    ds_map_add(global.map_out,"scr","net_dummy");
                                    ds_map_add(global.map_out,"index",unit_index);
                                    ds_map_add(global.map_out,"x",global.posX);
                                    ds_map_add(global.map_out,"y",global.posY);
                                    scr_send(global.map_out,"host");
                                    }
                                }
                            }
                        //update standing
                        scr_updateStanding_global();
                        //scr_updateLocalRadio(obj_map.units[global.posX,global.posY]);
                        //update vision
                        scr_updateLocalVision(obj_map.units[global.posX,global.posY]);
                        //update Radio Boarder
                        scr_globalRadioCheck();
                        scr_update_radioBoarder();
                        scr_rangeCheck_reset();
                        
                        //reactivate dummy deploy curosr
                        var re_controls = instance_create(global.posX*24,global.posY*24,obj_deployDummyCursor);
                        //set control delay so global pos dont 
                        re_controls.menuExitDelay = true;
                        re_controls.alarm[3] = global.exit_delay;
                        instance_destroy();
                        global.P_Turn.CO.rounds -=1;
                        }
                    }
                }   
            else{
                col = (mouse_x - start_x) div col_size;
                x = start_x + col *col_size;
               
                row = (mouse_y - start_y) div row_size;
                y = start_y + row *row_size;
               
                //juice
                scr_cursorKey_juice(1,global.cursorKey_sfx);
                }
            }
        else {
            //reactivate dummy deploy curosr
            var re_controls = instance_create(global.posX*24,global.posY*24,obj_deployDummyCursor);
            //set control delay so global pos dont 
            re_controls.menuExitDelay = true;
            re_controls.alarm[3] = global.exit_delay;
            instance_destroy()    

            }
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse left button = exit menu

if (mouse_check_button_pressed(mb_right))
    {
    //reactivate dummy deploy curosr
    var re_controls = instance_create(global.posX*24,global.posY*24,obj_deployDummyCursor);
    //set control delay so global pos dont 
    re_controls.menuExitDelay = true;
    re_controls.alarm[3] = global.exit_delay;
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deploy Action

//check for key
if global.ip_A_pressed{
    unit_has_deployed = false;
    no_deploy = false;
    //check col
    if( col == 0 ){
    //check row
        switch row {
            case 0: //Light Infantry
                if (global.P_Turn.funds &gt;= price[1]){
                    global.P_Turn.funds -= price[1];
                    scr_setUnit(obj_unit_LightInfantry,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[1]
                    unit_has_deployed = true;
                    }
                break;
            case 1: //Heavy Infantry (mechanized Infnatry)
                if (global.P_Turn.funds &gt;= price[2]){
                    global.P_Turn.funds -= price[2];
                    scr_setUnit(obj_unit_HeavyInfantry,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[2];
                    unit_has_deployed = true;
                    }
                break;
            case 2: //Long Gun
                if (global.P_Turn.funds &gt;= price[3]){
                    global.P_Turn.funds -= price[3];
                    scr_setUnit(obj_unit_LongGun,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[3];
                    unit_has_deployed = true;
                    }
                break;
            case 3: //Field Officer (commander)
                if (global.P_Turn.funds &gt;= price[4]){
                    global.P_Turn.funds -= price[4];
                    scr_setUnit(obj_unit_Officer,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[4];
                    unit_has_deployed = true;
                    }
                break; 
            case 4: //Recon
                if (global.P_Turn.funds &gt;= price[5]){
                    global.P_Turn.funds -= price[5];
                    scr_setUnit(obj_unit_Recon,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[5];
                    unit_has_deployed = true;
                    }
                break;
            case 5: //APC
                if (global.P_Turn.funds &gt;= price[6]){
                    global.P_Turn.funds -= price[6];
                    scr_setUnit(obj_unit_APC,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[6];
                    unit_has_deployed = true;
                    }
                break;
            case 6: //cancel
                no_deploy = true;
                break;
            }
        }            
    if(col == 1) {
        //check row
        switch row {
            case 0: //Light Tank
                if (global.P_Turn.funds &gt;= price[7]){
                    global.P_Turn.funds -= price[7];
                    scr_setUnit(obj_unit_LightTank,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[7];
                    unit_has_deployed = true;
                    }
                break;
            case 1: //Artillery
                if (global.P_Turn.funds &gt;= price[8]){
                    global.P_Turn.funds -= price[8];
                    scr_setUnit(obj_unit_Artillery,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[8];
                    unit_has_deployed = true;
                    }
                break;
           case 2: //IFV (AA)
                if (global.P_Turn.funds &gt;= price[9]){
                    global.P_Turn.funds -= price[9];
                    scr_setUnit(obj_unit_AA,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[9];
                    unit_has_deployed = true;
                    }
                break;
           case 3: //Covert Op.
                if (global.P_Turn.funds &gt;= price[10]){
                    global.P_Turn.funds -= price[10];
                    scr_setUnit(obj_unit_CovertOp,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[10];
                    unit_has_deployed = true;
                }
                break;
           case 4: //Heavy Tank
                if (global.P_Turn.funds &gt;= price[11]){
                    global.P_Turn.funds -= price[11];
                    scr_setUnit(obj_unit_HeavyTank,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[11];
                    unit_has_deployed = true;
                    }
                break;
           case 5: //Rocket
                if (global.P_Turn.funds &gt;= price[12]){
                    global.P_Turn.funds -= price[12];
                    scr_setUnit(obj_unit_Rocket,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[12];
                    unit_has_deployed = true;
                    }
                    break;
           case 6: //Land Cruiser
                if (global.P_Turn.funds &gt;= price[13]){
                    global.P_Turn.funds -= price[13];
                    scr_setUnit(obj_unit_LandCruiser,global.posX,global.posY,global.P_Turn.number);
                    //set unit's worth
                    obj_map.units[global.posX,global.posY].cost = worth[13];
                    unit_has_deployed = true;
                    }
                break;
            }        
        }

        if no_deploy {
                instance_activate_object(obj_deployDummyCursor);
                instance_activate_object(obj_miniwin);
                instance_activate_object(obj_topwin);
                instance_destroy();
                }
        if unit_has_deployed{
             if obj_map.units[global.posX,global.posY] !=0{
                with(obj_map.units[global.posX,global.posY]){
                    team = global.P_Turn.team;
                    state = "idle";
                    hp = 1;
                    dummy = true;
                    HP_hidden = true;
                    //check for COP and SCOP
                    if global.P_Turn.CO.COP_on obj_map.units[global.posX,global.posY].COP = true ;
                    if global.P_Turn.CO.SCOP_on obj_map.units[global.posX,global.posY].SCOP = true ;
                    //if unit is Covert.op, hide
                    //if unit_index = 10 isHidden = true;
                    // network mode
                    if global.net_mode = 2{
                        ds_map_clear(global.map_out);
                        ds_map_add(global.map_out,"scr","net_dummy");
                        ds_map_add(global.map_out,"index",unit_index);
                        ds_map_add(global.map_out,"x",global.posX);
                        ds_map_add(global.map_out,"y",global.posY);
                        scr_send(global.map_out,"host");
                        }
                    }
            //consume round
            global.P_Turn.CO.rounds -=1; 
            //turn isobervable if acting player is observed
            if global.observe_P[global.P_Turn.number]  obj_map.units[global.posX, global.posY].isObservable = true;
            // update visioni
            scr_updateLocalVision(obj_map.units[global.posX,global.posY]);
            //update standing
            scr_updateStanding_global();
            //scr_updateLocalRadio(obj_map.units[global.posX,global.posY]);
            //update vision
            scr_updateLocalVision(obj_map.units[global.posX,global.posY]);
            //update Radio Boarder
            scr_globalRadioCheck();
            scr_update_radioBoarder();
            scr_rangeCheck_reset();

            
            //Close deploy Window
            //reactivate dummy deploy curosr
            var re_controls = instance_create(global.posX*24,global.posY*24,obj_deployDummyCursor);
            //set control delay so global pos dont 
            re_controls.menuExitDelay = true;
            re_controls.alarm[3] = global.exit_delay;
            instance_destroy();
                }
            }
    }
        
         
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Temo, Display unit info

if global.ip_X_pressed{
    display_on = true;
    }
    
if global.ip_X_released{
    display_on = false;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cost nav
if col == 0{
        //check row
        switch row
            {
            case 0: //Light Infantry
                display_cost = price[1];
                break;
            
            case 1: //Heavy Infantry (mechanized Infnatry)
                display_cost =price[2];
                break;
            
            case 2: //Long Gun
                display_cost = price[3];
                break;
            
            case 3: //Field Officer (commander)
                display_cost = price[4];
                break; 
            
            case 4: //Recon
                display_cost = price[5];
                break;
            
            case 5: //APC
               display_cost = price[6];
                break;
            
            case 6: //cancel
                display_cost = 0;
                break;
            }
        }            
    if col == 1{
        //check row
           switch row
                {
           case 0: //Light Tank
                display_cost = price[7];             
                break;
                
           case 1: //Artillery
                display_cost = price[8];
                break;
                
           case 2: //IFV (AA)
               display_cost = price[9];
                break;
                
           case 3: //Covert Op.
                display_cost = price[10];
                break; 
                
           case 4: //Heavy Tank
               display_cost = price[11];
            break;
                
           case 5: //Rocket
                display_cost = price[12];
                break;
                
           case 6: //Land Cruiser
                display_cost = price[13];
                break;
            }        
        }   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// number cruncher

//adjust for when full screan
display_set_gui_size(768, 432);

//funds
scr_draw_num(spr_num_light,false,global.P_Turn.funds,229,55,8);


//cost
scr_draw_num(spr_num_light,false,display_cost,409,55,8);

//draw difference

if global.P_Turn.funds-display_cost &lt; 0
scr_draw_num(spr_num_red,false,global.P_Turn.funds-display_cost,595,55,8);

else
scr_draw_num(spr_num_light,false,global.P_Turn.funds-display_cost,595,55,8);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///trouible shoot readout



//draw_text(0,0,string(alarm[1]) + " X: " + string(col) + "  Y: " + string(row));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw order




//draw Normal
if (just_created) 
    {
    start_x = view_xview+132;
    start_y = view_yview+96;
    x = start_x;
    y = start_y;
    just_created = false ;
    }


//Draw menu
draw_sprite(spr_DeployWin,global.P_Turn.number-1,view_xview + 132,view_yview + 42);

//draw cost and over
if (global.P_Turn.funds &lt; price[13]) //Land Cruiser
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),12,view_xview[0]+378,view_yview[0]+318);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[13],view_xview+617,view_yview+119+36*6,8);
    }
else scr_draw_num( spr_num_light,false, price[13],view_xview+617,view_yview+119+36*6,8);

//Rocket
if (global.P_Turn.funds &lt; price[12]) //Rocket
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),11,view_xview[0]+378,view_yview[0]+282);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[12],view_xview+617,view_yview+119+36*5,8);
    }
else scr_draw_num( spr_num_light,false, price[12],view_xview+617,view_yview+119+36*5,8);


//Heavy Tank
if (global.P_Turn.funds &lt; price[11]) //Heavy Tank
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),10,view_xview[0]+378,view_yview[0]+246);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[11],view_xview+617,view_yview+119+36*4,8);
    }
else scr_draw_num( spr_num_light,false, price[11],view_xview+617,view_yview+119+36*4,8);


//Covert Op
if (global.P_Turn.funds &lt; price[10]) 
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),9,view_xview[0]+378,view_yview[0]+210);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[10],view_xview+617,view_yview+119+36*3,8);
    }
else scr_draw_num( spr_num_light,false, price[10],view_xview+617,view_yview+119+36*3,8);


//IFV aka AA
if (global.P_Turn.funds &lt; price[09]) 
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),8,view_xview[0]+378,view_yview[0]+174);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[09],view_xview+617,view_yview+119+36*2,8);
    }
else scr_draw_num( spr_num_light,false, price[09],view_xview+617,view_yview+119+36*2,8);


//Artillery
if (global.P_Turn.funds &lt; price[08])
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),7,view_xview[0]+378,view_yview[0]+138);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[08],view_xview+617,view_yview+119+36*1,8);
    }
else scr_draw_num( spr_num_light,false, price[08],view_xview+617,view_yview+119+36*1,8);

//Light Tank
if (global.P_Turn.funds &lt; price[07]) 
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),6,view_xview[0]+378,view_yview[0]+102);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[07],view_xview+617,view_yview+119+36*0,8);
    }
else scr_draw_num( spr_num_light,false, price[07],view_xview+617,view_yview+119+36*0,8);


//APC
if (global.P_Turn.funds &lt;price[06]) 
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),5,view_xview[0]+138,view_yview[0]+282);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[06],view_xview+377,view_yview+119+36*5,8);
    }
else scr_draw_num( spr_num_light,false, price[06],view_xview+377,view_yview+119+36*5,8);


//Recon
if (global.P_Turn.funds &lt; price[05])
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),4,view_xview[0]+138,view_yview[0]+246);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[05],view_xview+377,view_yview+119+36*4,8);
    }
else scr_draw_num( spr_num_light,false, price[05],view_xview+377,view_yview+119+36*4,8);


//Officer
if (global.P_Turn.funds &lt; price[04]) 
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),3,view_xview[0]+138,view_yview[0]+210);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[04],view_xview+377,view_yview+119+36*3,8);
    }
else scr_draw_num( spr_num_light,false, price[04],view_xview+377,view_yview+119+36*3,8);


//Long Gun
if (global.P_Turn.funds &lt; price[03]) 
    {  
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),2,view_xview[0]+138,view_yview[0]+174);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[03],view_xview+377,view_yview+119+36*2,8);
    }
else scr_draw_num( spr_num_light,false, price[03],view_xview+377,view_yview+119+36*2,8);


//Heavy Infantry
if (global.P_Turn.funds &lt; price[02]) 
    {
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),1,view_xview[0]+138,view_yview[0]+138);
    //draw ovewrcost number
      scr_draw_num(  spr_num_dark,false, price[02],view_xview+377,view_yview+119+36*1,8);
    }
else scr_draw_num( spr_num_light,false, price[02],view_xview+377,view_yview+119+36*1,8);


//Light Infantry
if (global.P_Turn.funds &lt; price[01]) 
    {
    //draw Overcost sprite
    draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),0,view_xview[0]+138,view_yview[0]+102);
    //draw ovewrcost number
     scr_draw_num(  spr_num_dark,false, price[01],view_xview+377,view_yview+119+36*0,8);
    }
else scr_draw_num( spr_num_light,false, price[01],view_xview+377,view_yview+119+36*0,8);
    

//draw cursor or "self"
draw_self();



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw mouse pointer
draw_sprite(spr_mousePointer, global.P_Turn.number-1, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Temo, Display unit info

if display_on{
    if col = 0{
        switch row{
            
            case 0: // Light infantry
            draw_sprite(spr_temp_unit_summary,1,view_xview+390,view_yview+110);
            break;
            
            case 1: // H infantry
            draw_sprite(spr_temp_unit_summary,2,view_xview+390,view_yview+110);
            break;
            
            case 2: // L gun infantry
            draw_sprite(spr_temp_unit_summary,3,view_xview+390,view_yview+110);
            break;
            
            case 3: // officer
            draw_sprite(spr_temp_unit_summary,4,view_xview+390,view_yview+110);
            break;
            
            case 4: // Recom
            draw_sprite(spr_temp_unit_summary,5,view_xview+390,view_yview+110);
            break;
            
            case 5: // APC
            draw_sprite(spr_temp_unit_summary,6,view_xview+390,view_yview+110);
            break;
            
            }
        if (display_cost != 0)    
        draw_sprite(spr_temp_summary_boarder,global.P_Turn.number-1,view_xview+390,view_yview+110);
        }
    else if col = 1 {
        switch row {
            case 0 : //light Tank
            draw_sprite(spr_temp_unit_summary,7,view_xview+150,view_yview+110);
            break;
            
            case 1 : //artillery
            draw_sprite(spr_temp_unit_summary,8,view_xview+150,view_yview+110);
            break;
            
            case 2 : //IFV
            draw_sprite(spr_temp_unit_summary,9,view_xview+150,view_yview+110);
            break;
            
            case 3 : //spy
            draw_sprite(spr_temp_unit_summary,10,view_xview+150,view_yview+110);
            break;
            
            case 4 : //heavy tank
            draw_sprite(spr_temp_unit_summary,11,view_xview+150,view_yview+110);
            break;
            
            case 5 : //rocket
            draw_sprite(spr_temp_unit_summary,12,view_xview+150,view_yview+110);
            break;
            
            case 6 : //l.Cruiser
            draw_sprite(spr_temp_unit_summary,13,view_xview+150,view_yview+110);
            break;
                
                }
        if (display_cost != 0)    
        draw_sprite(spr_temp_summary_boarder,global.P_Turn.number-1,view_xview+150,view_yview+110);
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
