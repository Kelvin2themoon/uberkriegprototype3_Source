<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Description: Terrain Parent 

name = "Terrain"
depth = 0;              // depth (smaller numbers set first) 
graphic_set = "Basic";  //anticipating different terrain sets suc has desert or winter or rain?
graphic_index = 0 ;     //used to save &amp; draw appropriate tile image, use int becasue some will use math
Cover = 0;              //for defence coverage
inFog = true;           //for fog of war
isProperty = false;
isVisible = true;       //visable to active player
isObservable = true;    //Observable localy, distict from isVisable 

//stop animation
image_speed = 0;



// Move Costs
mtype_boots         = 0;
mtype_heavyBoots    = 0;
mtype_tires         = 0;
mtype_heayTires     = 0;
mtype_specialTires  = 0;
mtype_tracks        = 0;
mtype_heavyTracks   = 0;

//special attributes

canHide = false;            //hides for forest and protperties, etc.
canHideSmall = false;       //hids small units
isTall = false;             // increase radio and vision range

//graphic Defaults
isLand  = true;     //used for land edges and corners
isWet   = false;    //used for river graphics
isSolid = true;     //used for bridge graphics


//special CO Variables
isSmoke = false;
smoker = 0; //check for which player initiated the smoke and when to disipate
smoke_left = 0;//number of turns smokescreen lasts

//variable that keeps standing check not crash
isDisrupted = false;

//checker for map editor fill function
q = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust drawing Variables
posx = x div 24;
posy = y div 24;
//smoke
draw_smoke_index = spr_smoke_1;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///visibility and smoke couhnt down
if isObservable image_blend = c_white;
else image_blend = c_gray;
//smoke drawing index
//draw_smoke_index = smoke_left - 1;
//replace frame index with sprite index
if(isSmoke){
    draw_smoke_index = asset_get_index("spr_smoke_"+string(smoke_left));
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw stuff
draw_self();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw smoke
if(isSmoke and smoke_left &gt; 0){ 
    draw_sprite_ext(draw_smoke_index,global.smoke_frame,x,y,1,1,0,c_white,global.glow);
    draw_sprite(spr_smoke_outline,global.smoke_frame,x,y);
    //draw_sprite(spr_smoke_num,smoke_left,x,y);
    //draw_text(x,y,string(smoke_left));
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
