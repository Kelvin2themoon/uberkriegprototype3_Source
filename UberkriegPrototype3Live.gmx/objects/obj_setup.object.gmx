<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_setup_bg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///switch to global mouse controls
global.m_gactive = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// load relevent data from map file
//reset player count
//x draw positions
xpos[1] = 0;
xpos[2] = 0;
xpos[3] = 0;
xpos[4] = 0;
//CO portraite y draw positions (to be animated, staggered)
coy[1] = 0;
coy[2] = 0;
coy[3] = 0;
coy[4] = 0;
//team y pos, to be animated staggered
teamy[1] = 0;
teamy[2] = 0;
teamy[3] = 0;
teamy[4] = 0;
//terms y pos
termsy = 0;
//next,start button y pos
starty = 0; 

//open map ini file
map_file = global.map_select;

//set names
global.player_name[1] = "Cookieland";
global.player_name[2] = "Pepperland";
global.player_name[3] = "Marmaland";
global.player_name[4] = "Pretzeland";

if file_exists(map_file){
    //load map file
    ini_open(global.map_select);
    show_debug_message("map loaded: "+ global.map_select);
    //get map size
    var w = ini_read_real("Meta","Width",5);
    var h = ini_read_real("Meta", "Height" ,5);
    show_debug_message(string(w));
    show_debug_message(string(h));
    
    //count players, check for HQs and command
    var i = 0;
    var j = 0;
    var pos = "";
    var check_index = 0; //taerrain or unit index check
    var player_num = 0;
    var count_tiles = 0;
    //reset player count, just in case
    global.player_count = 0;
      i=1;
    for(i=1;i&lt;5;i++){
        global.inplay_P[i]=false;
        }
    for(i=0;i&lt;h;i++){
        for(j=0;j&lt;w;j++){
            count_tiles +=1;
            //read position
            pos = string(j)+"X"+string(i)+"Y";
            //check terrain index
            check_index = ini_read_real("Terrains",pos,0);
            if (check_index=11 or check_index=15){ //HQ or Command post
                player_num = ini_read_real("Terrains",pos+"P",0);
                show_debug_message("HQ counted");
                if (player_num &gt; 0) global.inplay_P[player_num] = true;
                }
            //checl units
            check_index = ini_read_real("Units",pos,0);
            if (check_index&gt;0){
                //check unit for command
                  if (ini_read_real("Units",pos+"C",0)=1){
                    player_num = ini_read_real("Units",pos+"P",0);
                    if (player_num &gt; 0) global.inplay_P[player_num] = true;
                    } 
                }     
            }
        }
    show_debug_message("players: "+string(global.player_count));
    //player slot assignments
    //count players
    i=1;
    for(i=1;i&lt;5;i++){
        if global.inplay_P[i] global.player_count += 1;
        }
    //assign player slots
    var i=1; // count player
    var j=1; // count slot
    for(i=1; i&lt;5; i++){
        show_debug_message("i is "+string(i));
        if (global.inplay_P[i]){
            show_debug_message("J is "+string(j));
            global.p_slot[j] = i;
            j++;
            }
        }
       
    
        
    //show_message("number of players: "+ string(global.player_count));
    show_debug_message("number of tiles: "+ string(count_tiles));  
    show_debug_message("player count: "+ string(global.player_count));  
    //set x positions according to number of players
    switch(global.player_count){
        case 0:
            show_debug_message("not enough players");
            room_goto(rm_map_select);
            break;
        case 1:
            show_debug_message("not enough players");
            room_goto(rm_map_select);
            break ;
        case 2:
            xpos[1] = 234;
            xpos[2] = 414;
            break;
        case 3:
            xpos[1] = 168;
            xpos[2] = 324;
            xpos[3] = 480;
            break;
        case 4:
            xpos[1] = 126;
            xpos[2] = 258;
            xpos[3] = 390;
            xpos[4] = 522;
            break;
        }
    ini_close();
    }
else {
    //return to tite screen (place hold action
    show_message("map file not found");
    room_goto(rm_Title_Screen);
    }
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create CO select object
co_select_interace = instance_create(0,0,obj_co_select);
for (i=1; i&lt;=global.player_count;i++){
    co_select_interace.xpos[i] = xpos[i];
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///back button
b_back_frame = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse over checf, using m_globals
if (mouse_x&gt;696 and mouse_x&lt;743 and mouse_y&gt;396 and mouse_y&lt;419){
    if mouse_check_button(mb_left) b_back_frame = 2;
    else b_back_frame = 1;
    }
else b_back_frame = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw stuff: static
draw_self();
var i=1;
for(i=1;i&lt;=global.player_count;i++){
    //draw line
    draw_set_colour(global.c_uiLineGrey);
    draw_line(xpos[i],95,xpos[i]+120,95);
    //draw names
    draw_set_colour(global.c_uiWhite);
    draw_text(xpos[i],83,global.player_name[global.p_slot[i]]);
    }
    
//back button
draw_sprite(spr_back_button,b_back_frame,696,396);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
