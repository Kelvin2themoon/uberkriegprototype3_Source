<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_basicCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize
image_speed = 0;                //stop animation
depth = UI_DEPTH_CURSOR;       //raise depth to top (UI level)
fast_scroll_on = false;

//set x and y to globals
x = global.posX*24;
y = global.posY*24;

//terrain select sprites
t_sprite_index = 0; 
t_is_natural = true;
t_sprite[0] = spr_me_terrains; //neutral, includes natural terrains
t_sprite[1] = spr_me_props_green;
t_sprite[2] = spr_me_props_red;
t_sprite[3] = spr_me_props_gold;
t_sprite[4] = spr_me_props_blue;
//unit select sprites (centered)
u_sprite_index = 0;
u_sprite[1] = spr_me_units_green;
u_sprite[2] = spr_me_units_red;
u_sprite[3] = spr_me_units_gold;
u_sprite[4] = spr_me_units_blue;
//reasign sprite indexes from based on actual selection
if (global.me_t_sel &gt; 10){ 
    t_is_natural = false; //is property
    } 
else {
    t_is_natural = true; 
    }
/*
current selection indexes saved to global.u_sel and t_sel which ar einitiated in obj_map_editor _v2
also found in objects as unit_index and index for terrain (sorry)
reference usiing global.unit_type[] &amp; global.terrain_type[] initiated in master controls
not that bridges that go over sea or rivers are separate objects and need to be re assigned from 50 or 56 to 5
the setter script might take care of it but might wanna check. 
*/




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initiate for cursor animation
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate cursor and pos
image_index = global.cursorFrameIndex
//update pos
global.posX = x div 24 ;
global.posY = y div 24 ;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keyboard and g-pad nav

/// Navigation Ver.2 now with game pad controls

//      check for key delay on press
if (global.ip_up_pressed   ||
    global.ip_down_pressed ||
    global.ip_left_pressed ||
    global.ip_right_pressed){
        global.cursorKey_delay = global.cursorKey_startspeed;
        }
        
//      reset key delay on release
if (global.ip_up_released   ||
    global.ip_down_released ||
    global.ip_left_released ||
    global.ip_right_released){
        alarm[1] = 0;
        global.cursorKey_delay = global.cursorKey_startspeed ;
        }

//nav key check                

// arrow key actions and juice        
if (alarm[1] = -1 ){
    switch(global.ip_nav){
        // reset all range checks if no action
        case(0):
            alarm[1] = 0;
            global.cursorkey_delay = global.cursorKey_startspeed ;
            //if (isOnGlobalRadioCheck = false and checking_attack_range = false and checking_move_range = false) scr_rangeCheck_reset();   
            break;
        //up
        case 8 :
            if (fast_scroll_on and global.posY &gt; 0){
                y -= 24 ;
                if global.canScroll_y view_yview -= 24;
                } 
            else{
                if ( global.posY &gt; 0 ) y = y  - 24 ;
                scr_cursorKey_juice(1,global.cursorKey_sfx);
                //if (isOnGlobalRadioCheck = false and checking_attack_range = false and checking_move_range = false)  scr_rangeCheck_reset();
                }
            break;
        //down
        case 2 :
            if ( global.posY &lt; global.mapH - 1  and fast_scroll_on ){
                y += 24 ;
                if global.canScroll_y view_yview += 24;
                }
            else{
                if ( global.posY &lt; global.mapH - 1 ) y = y  + 24 ;

                scr_cursorKey_juice(1,global.cursorKey_sfx);
                //if (isOnGlobalRadioCheck = false and checking_attack_range = false and checking_move_range = false) scr_rangeCheck_reset();
                }    
            break;
        //left
        case 4 :
            if ( global.posX &gt; 0 and fast_scroll_on ){
                x -= 24 ;
                if global.canScroll_x view_xview -= 24 ;
                }
            else{
                if ( global.posX &gt; 0 ) x = x  - 24 ;
                scr_cursorKey_juice(1,global.cursorKey_sfx);
                //if ( isOnGlobalRadioCheck = false and checking_attack_range = false and checking_move_range = false ) scr_rangeCheck_reset();
                }
            break;  
                    
        //right
        case 6 :
            if ( global.posX &lt; global.mapW - 1 and fast_scroll_on ){      
                x += 24 ;
                if global.canScroll_x view_xview +=24 ;  
                }
            
            else{
                if ( global.posX &lt; global.mapW - 1 ) x = x  + 24 ;
                scr_cursorKey_juice(1,global.cursorKey_sfx);
                //if (isOnGlobalRadioCheck = false and checking_attack_range = false and checking_move_range = false) scr_rangeCheck_reset();      
                }
            break;
        }

    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// camera check for boarders and move 
scr_camera_follow(global.posX,global.posY,global.cam_border,global.cam_speed);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///key actions

//B to copy
if (global.ip_B_pressed){
    //unit***
    if global.me_sel_is_unit {}
    //terrain***copy
    else{ 
        global.me_t_sel = obj_map.terrains[global.posX,global.posY].index;
        if (global.me_t_sel = 56 or global.me_t_sel = 50) global.me_t_sel = 5; 
        if (global.me_t_sel &gt; 10){ 
            t_is_natural = false; //is property
            global.me_p_sel = obj_map.terrains[global.posX,global.posY].ownership;
            }
        else t_is_natural = true; 
        }
    }
//A to confirm
else if (global.ip_A_hold){
    //unit***
    if global.me_sel_is_unit{}
    //terrain***set
    else {
        //bridge exception
        if (global.me_t_sel = 5){
            if (obj_map.terrains[global.posX,global.posY].index = 0) scr_setTerrain(obj_terrain_SeaBridge ,global.posX,global.posY,0);
            else if (obj_map.terrains[global.posX,global.posY].index = 6) scr_setTerrain(obj_terrain_RiverBridge ,global.posX,global.posY,0);
            }
        //properties
        else if (obj_map.terrains[global.posX,global.posY].index &gt;10) scr_setTerrain(global.terrain_type[global.me_t_sel],global.posX,global.posY,global.me_p_sel);
        //natural terrain
        else scr_setTerrain(global.terrain_type[global.me_t_sel],global.posX,global.posY,0);

        }
    }
//X - delete
else if (global.ip_X_hold){
    //unit***
    if global.me_sel_is_unit{}
    //terrain***delete
    else{
        //check for bridges
        if (obj_map.terrains[global.posX,global.posY].index = 50) scr_setTerrain(obj_terrain_Sea,global.posX,global.posY,0);
        else if (obj_map.terrains[global.posX,global.posY].index = 56) scr_setTerrain(obj_terrain_River,global.posX,global.posY,0);
        //every thing else
        else if (obj_map.terrains[global.posX,global.posY].index &gt; 1 and obj_map.terrains[global.posX,global.posY].index != 6) scr_setTerrain(obj_terrain_Plains,global.posX,global.posY,0);
        }
    }

//Y to fill, not abvaliable if terrain selectyion is HQ (THERE CAN ONLY BE ONE!!!!!!)
else if (global.ip_Y_pressed and global.me_t_sel != 11 ){
    //unit
    if global.me_sel_is_unit{}
    //terrain***fill
    else if (global.me_t_sel != obj_map.terrains[global.posX,global.posY].index){
        //check for bridge exception
        if (global.me_t_sel = 5){}//deal with later
        //Properties, add player
        else if (global.me_t_sel &gt; 10){}
        //natural terrain
        else{
            scr_fill(global.terrain_type[global.me_t_sel],0,global.posX,global.posY);
            }
        } 
    }

//L - open unit/terrain list
else if (global.ip_LB_pressed){
    show_debug_message("L1 preseed");
    instance_create(0,0,obj_me_sel_terrain);
    instance_destroy();
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
draw_text(12,12,"X: "+string(global.posX));
draw_text(12,12+14,"Y: "+string(global.posY));
draw_text(12,12+14*2,"is natural : "+string(t_is_natural));
draw_text(12,12+14*3,"is unit : "+string(global.me_sel_is_unit));
draw_text(12,12+14*4,"index : "+string(obj_map.terrains[global.posX,global.posY].index));

if (global.ip_LB_hold) draw_text(12,12+14*6, "key on");




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw stuff
draw_self();
//selection window base
draw_sprite(spr_me_selection,0,view_xview,view_yview+384)
//draw pos
scr_draw_num_small(spr_me_num,false,global.posX+1,view_xview+73,view_yview+407,2);
scr_draw_num_small(spr_me_num,false,global.posY+1,view_xview+73,view_yview+416,2);

//selection
if global.me_sel_is_unit {
    }
else {
    if t_is_natural draw_sprite(t_sprite[0],global.me_t_sel+5,view_xview+12,view_yview+396);
    else draw_sprite(t_sprite[global.me_p_sel],global.me_t_sel-11,view_xview+12,view_yview+396);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
