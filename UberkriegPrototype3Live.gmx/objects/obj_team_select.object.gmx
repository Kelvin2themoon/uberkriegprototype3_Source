<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initiate draw variables
depth = -1;
state = 0; //start on enter
c_pos = 1; // cursor position
b_next_frame = 0; 
//initiate state
/*  0 - enter    - move into frame into active position, staggared 
    1 - active   - cursor on
    2 - fall in  - move into final position, staggared animation
    3 - fall out - move back into active from final position 
    4 - static   - end action, go to terms select
    5 - return   - move out of frame and destroy self, return to co select
*/

//key fram positions
start_y     = 220+255+12;
offset      = 6;
active_y    = 220+12;
break_y     = 220+80+12;
set_y       = 220+12;
 


//initiate variables for each open slot
//set by setup object
var i=1;
for (i=1; i&lt;=global.player_count;i++){
    team[i]     = i; 
    xpos[i]     = 0;
    ypos[i]     = start_y ; // start  displays out of frame 
    alarm[i]    = 1+2*(i-1); //set alarm to animat
    y_speed[i]  = 64; 
    //flip[i]     = false; // switch decelerate.accellerate fall_in/fall out
    //reverse[i]  = true;
    step[i] = 1;
    fade[i] = 1;
    //tab frames
    tab_frame[i,0] = 0; //tabs top
    tab_frame[i,1] = 5; //tabs bottom
    }

//distance moved for fall in/out frames

fall_step[0]  =  0;
fall_step[1]  =  1;
fall_step[2]  =  2;
fall_step[3]  =  4;
fall_step[4]  =  8;
fall_step[5]  = 15;
fall_step[6]  = 15;
fall_step[7]  =  8;
fall_step[8]  =  4;
fall_step[9]  =  2;
fall_step[10] =  1;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initiate alarm for key controls
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///portrait animation
var a = 4;

switch state {
    case 0: //enter
        if (ypos[a]&gt;active_y){    
            ypos[a] -= y_speed[a];
            alarm[a] = 1;
            //show_debug_message(string(y_speed[a]));
            //show_debug_message(string(ypos[a]));
            if (ypos[a] &lt;= break_y) y_speed[a] = y_speed[a] div 2;    
            }
        else if (a = global.player_count){
        state = 1;    
            }
        break;
    case 2: //fall in
        if (step[a]&lt;=10){
            ypos[a] -= fall_step[step[a]];
            step[a]++;
            alarm[a] = 1;
            }
        else if (a=global.player_count) {
            state = 4;
            //step[a] = 10;
            }
        break;
        case 3: //fall out
        if (step[a]&gt;=1){
            ypos[a] += fall_step[step[a]];
            step[a]--;
            alarm[a] = 1;
            }
        else if (a=global.player_count) {
            state = 1;
            obj_co_select.state = 4;
            }
        break;
    case 5 : //leave and return to co select
          ypos[a] += y_speed[a];
          y_speed[a] = y_speed[a]*2;
          if (ypos[a]&gt;432 and a=global.player_count)instance_destroy();
          alarm[a] = 1;
          break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///portrait animation
var a = 3;

switch state {
    case 0: //enter
        if (ypos[a]&gt;active_y){    
            ypos[a] -= y_speed[a];
            alarm[a] = 1;
            //show_debug_message(string(y_speed[a]));
            //show_debug_message(string(ypos[a]));
            if (ypos[a] &lt;= break_y) y_speed[a] = y_speed[a] div 2;    
            }
        else if (a = global.player_count){
        state = 1;    
            }
        break;
    case 2: //fall in
        if (step[a]&lt;=10){
            ypos[a] -= fall_step[step[a]];
            step[a]++;
            alarm[a] = 1;
            }
        else if (a=global.player_count) {
            state = 4;
            //step[a] = 10;
            }
        break;
        case 3: //fall out
        if (step[a]&gt;=1){
            ypos[a] += fall_step[step[a]];
            step[a]--;
            alarm[a] = 1;
            }
        else if (a=global.player_count) { 
            state = 1;
            obj_co_select.state = 4;
            }
        break;
    case 5 : //leave and return to co select
          ypos[a] += y_speed[a];
          y_speed[a] = y_speed[a]*2;
          if (ypos[a]&gt;432 and a=global.player_count)instance_destroy();
          alarm[a] = 1;
          break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///portrait animation
var a = 2;

switch state {
    case 0: //enter
        if (ypos[a]&gt;active_y){    
            ypos[a] -= y_speed[a];
            alarm[a] = 1;
            //show_debug_message(string(y_speed[a]));
            //show_debug_message(string(ypos[a]));
            if (ypos[a] &lt;= break_y) y_speed[a] = y_speed[a] div 2;    
            }
        else if (a = global.player_count){
        state = 1;    
            }
        break;
    case 2: //fall in
        if (step[a]&lt;=10){
            ypos[a] -= fall_step[step[a]];
            step[a]++;
            alarm[a] = 1;
            }
        else if (a=global.player_count) {
            state = 4;
            }
        break;
        case 3: //fall out
        if (step[a]&gt;=1){
            ypos[a] += fall_step[step[a]];
            step[a]--;
            alarm[a] = 1;
            }
        else if (a=global.player_count) {
            state = 1;
            obj_co_select.state = 4;
            }
        break;
    case 5 : //leave and return to co select
          ypos[a] += y_speed[a];
          y_speed[a] = y_speed[a]*2;
          if (ypos[a]&gt;432 and a=global.player_count)instance_destroy();
          alarm[a] = 1;
          break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///portrait animation
var a = 1;

switch state {
    case 0: //enter
        if (ypos[a]&gt;active_y){    
            ypos[a] -= y_speed[a];
            alarm[a] = 1;
            //show_debug_message(string(y_speed[a]));
            //show_debug_message(string(ypos[a]));
            if (ypos[a] &lt;= break_y) y_speed[a] = y_speed[a] div 2;    
            }
        else if (a = global.player_count){
        state = 1;    
            }
        break;
    case 2: //fall in
        if (step[a]&lt;=10){
            ypos[a] -= fall_step[step[a]];
            step[a]++;
            alarm[a] = 1;
            }
        else if (a=global.player_count) {
            state = 4;
            }
        break;
        case 3: //fall out
        if (step[a]&gt;=1){
            ypos[a] += fall_step[step[a]];
            step[a]--;
            alarm[a] = 1;
            }
        else if (a=global.player_count) { 
            state = 1;
            obj_co_select.state = 4;
            }
        break;
    case 5 : //leave and return to co select
          ypos[a] += y_speed[a];
          y_speed[a] = y_speed[a]*2;
          if (ypos[a]&gt;432 and a=global.player_count)instance_destroy();
          alarm[a] = 1;
          break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///key nav

if (state=1){
    /// Navigation Ver.2 now with game pad controls

    //      check for key delay on press
    if (global.ip_up_pressed   ||
        global.ip_down_pressed ||
        global.ip_left_pressed ||
        global.ip_right_pressed){
            global.cursorKey_delay = global.cursorKey_startspeed;
            }
            
    //      reset key delay on release
    if (global.ip_up_released   ||
        global.ip_down_released ||
        global.ip_left_released ||
        global.ip_right_released){
            alarm[5] = 0;
            global.cursorKey_delay = global.cursorKey_startspeed ;
            }
    
    //nav key check
    //**IMPORTANT** using alarm 5 for cursor animation                
    
    // arrow key actions and juice        
    if (alarm[5] = -1 ){
        switch(global.ip_nav){
            // reset all range checks if no action
            case(0):
                alarm[5] = 0;
                global.cursorkey_delay = global.cursorKey_startspeed ;
                //clear tab frame
                for (i=1; i&lt;=global.player_count;i++){
                    tab_frame[i,0] = 0; //tabs top
                    tab_frame[i,1] = 5; //tabs bottom
                    //check for key active position
                    }
                //check for key active position
                tab_frame[c_pos,0] = 2;
                tab_frame[c_pos,1] = 7;
                break;   
            //down
            case 2 :
                global.Team_P[global.p_slot[c_pos]]++;
                if (global.Team_P[global.p_slot[c_pos]]&gt;4) global.Team_P[global.p_slot[c_pos]] = 1;
                 tab_frame[c_pos,1] = 9;
                scr_cursorKey_juice(5,global.cursorKey_sfx);
                break;
            //up
            case 8 :
                global.Team_P[global.p_slot[c_pos]]--;
                if (global.Team_P[global.p_slot[c_pos]]&lt;1)  global.Team_P[global.p_slot[c_pos]] = 4;
                tab_frame[c_pos,0] = 4;
                scr_cursorKey_juice(5,global.cursorKey_sfx);
                break;
            //right
            case 6 :
                //clear heighlight
                tab_frame[c_pos,0] = 0;
                tab_frame[c_pos,1] = 5;
                //do action
                c_pos++;
                if (c_pos&gt;global.player_count) c_pos=1;
                //check for key active position
                tab_frame[c_pos,0] = 2;
                tab_frame[c_pos,1] = 7;  
                scr_cursorKey_juice(5,global.cursorKey_sfx);
                break;  
            //left
            case 4 :
                //clear heighlight
                tab_frame[c_pos,0] = 0;
                tab_frame[c_pos,1] = 5;
                //do action
                c_pos--;
                if (c_pos&lt;1) c_pos=global.player_count;
                //check for key active position
                tab_frame[c_pos,0] = 2;
                tab_frame[c_pos,1] = 7;  
                scr_cursorKey_juice(5,global.cursorKey_sfx);
                break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse over check

global.m_over = 0;
global.m_type = spr_mouseSlapper;
if (state=1){
    var i=1;
    for(i=1;i&lt;=global.player_count;i++){
        if (mouse_x&gt;xpos[i] and mouse_x&lt;xpos[i]+58 and mouse_y&gt;set_y-20){ 
            //top tab
            if (mouse_y&lt;set_y-20+20){ 
                global.m_over = 10*i+1;  
                if (tab_frame[i,0]&lt;4) tab_frame[i,0] +=1;
                }
            //portrait
            else if(mouse_y&lt;294+12-24+6-2){
                global.m_over = 10*i;
                global.m_type = spr_mousePointer;
                }
            //bottom tab
            else if (mouse_y&lt;294+12-24+6+20-2){
                global.m_over = 10*i+2;
                if (tab_frame[i,1]&lt;9) tab_frame[i,1] +=1;
                }
            }
        }
    b_next_frame = 0;
    if (mouse_x&gt;345 and mouse_y&gt;336 and mouse_x&lt;345+78 and mouse_y&lt;336+39){
        global.m_over=2; // next
        b_next_frame = 1;
        }
    }
if (mouse_x&gt;696 and mouse_x&lt;743 and mouse_y&gt;396 and mouse_y&lt;419) global.m_over = 1; // back    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse control action
if (state=1){
    if mouse_check_button_pressed(mb_left) global.cursorKey_delay = global.cursorKey_startspeed;
    if mouse_check_button_released(mb_left){
        alarm[5] = 0;
        global.cursorKey_delay = global.cursorKey_startspeed;
        }
    
    if (mouse_check_button_pressed(mb_left)){
        //tab controls
        if(global.m_over&gt;9){
            c_pos = global.m_over div 10;
            scr_cursorKey_juice(5,global.cursorKey_sfx);
            if (global.m_over - c_pos*10 = 1){
                global.Team_P[global.p_slot[c_pos]]--;
                if (global.Team_P[global.p_slot[c_pos]]&lt;1)  global.Team_P[global.p_slot[c_pos]] = 4;
                tab_frame[c_pos,0] = 4;
                }
            else if (global.m_over - c_pos*10 = 2){
                global.Team_P[global.p_slot[c_pos]]++;
                if (global.Team_P[global.p_slot[c_pos]]&gt;4) global.Team_P[global.p_slot[c_pos]] = 1;
                tab_frame[c_pos,1] = 9;
                }
            }    
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press A - fall in
if (global.ip_A_pressed or (mouse_check_button_pressed(mb_left) and global.m_over=2) ) {
    if (state=1){
        state = 2;
        obj_co_select.state = 5;
        instance_create(167,239,obj_terms_select);
        var i=1; 
        for(i=1;i&lt;=global.player_count;i++){
            alarm[i] = 1;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Press B
if (global.ip_B_pressed or (mouse_check_button_pressed(mb_left) and global.m_over = 1) or mouse_check_button_pressed(mb_right)){
    if (state=1){ // return to CO select
        state = 5;
        var i=1;
        for(i=1;i&lt;=global.player_count;i++){
            y_speed[i] = 1;
            alarm[i] = 1;
            show_debug_message("alarm set: "+string(i));
            }
        }
    else if (state=4){  //fall out
     state = 3;
        var i=1;
            for(i=1;i&lt;=global.player_count;i++){
            step[i] = 10;
            alarm[i] = 1;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///calculate fade

var i=1;
for (i=1; i&lt;=global.player_count;i++){
    fade[i] = (60-(active_y-ypos[i]))/60;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
//draw_text(24,2,"state"+string(state));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw flags
var i=0
for (i=1; i&lt;=global.player_count;i++){
    draw_sprite_ext(spr_team_flag,global.Team_P[global.p_slot[i]],xpos[i],ypos[i]+offset*(global.Team_P[global.p_slot[i]]-1),1,1,0,c_white,fade[i]);
    if (state=4) draw_sprite(spr_team_bit,global.Team_P[global.p_slot[i]],xpos[i]+82,146);
    if (state=1){
        draw_sprite(spr_tab_teams,tab_frame[i,0],xpos[i],198+12);
        draw_sprite(spr_tab_teams,tab_frame[i,1],xpos[i],294+12-24+6);
        }  
    }
    
if (state=1){ 
    draw_sprite(spr_scursor_teams,global.cursorFrameIndex,xpos[c_pos],ypos[c_pos]+offset*(global.Team_P[global.p_slot[c_pos]]-1));
    draw_sprite(spr_next_button,b_next_frame,345,336);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
/*
for(i=1;i&lt;=global.player_count;i++){
    draw_text(24, ypos[i]+i*14, string(ypos[i]));
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
