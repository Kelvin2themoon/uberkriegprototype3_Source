<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Description

/*
this object keeps track of  all presistant variables in map editor including
2
the MAP!!!
- Terrains: 2D array
- Units   : 2d array (not implimented yet)*
- Tile Selection used (by the cursor)
- some variables used to control the view-port


I'm not sure if i will use this object for the actual game


*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
depth = 0;

name = "Protoland";
global.mapW = 45; // map height in terms of tiles
global.mapH = 45;// map width in terms of tiles

//global variables for allowing scrolling for both map editor and in-game, false if the map is too small
global.canScroll_x = true;
global.canScroll_y = true;

//adjust the boarder to center map if too small

 if (global.mapH &lt;= 18 )
    {
    view_yview[0] = (-1)*12*(18-global.mapH);
    global.canScroll_y = false;
    
    }
    
 if (global.mapW &lt;= 32)
    {
    view_xview[0] = (-1)*12*(32-global.mapW);
    global.canScroll_x = false;
    }

 

// create &amp; place Plains objects in terrainMap 2Darray.
//when the time comes this will be where a map file can be read and converted
for( i = 0 ; i &lt; global.mapW ; i += 1 )         // i is to X
    {
    for( j = 0 ; j &lt; global.mapH; j += 1 )      // j is to Y
        {        
        terrains[i,j] = instance_create( i*24 , j*24 , obj_terrain_Plains ) ;
        }
    }

//Create empty array "units" &amp; fill it with "-1"s
for( i = 0 ; i &lt; global.mapW ; i += 1 )         // i is to X
    {
    for( j = 0 ; j &lt; global.mapH; j += 1 )      // j is to Y
        {        
        units[i,j] = 0 ;
        }
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
