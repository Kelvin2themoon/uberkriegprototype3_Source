<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_map_select_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set game mode to edit mode
//so units can be drawn w/out player objects 
global.mode = "Map Edit";
//deacrvate global mouse controls (becasue local controls are implimented)
global.m_gactive = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load map list

depth = UI_DEPTH_WIN;

//crate list of map folders****************************************************
map_dir = ds_list_create();
ds_list_add(map_dir,file_find_first(working_directory+"maps/*",fa_directory));
dir_select = file_find_next();
dir_index = global.vs_map_dir_index; // used for nav

while(dir_select !=""){
    ds_list_add(map_dir,dir_select);
    dir_select = file_find_next();
    }
//set dir to first item
dir_select = ds_list_find_value(map_dir,dir_index);

//initiate list of maps for each folder
map_lists = array_create(ds_list_size(map_dir));

i=0;

for ( i=0 ; i&lt;ds_list_size(map_dir) ; i++){
    //initiate list of maps
    map_lists[i] = ds_list_create();
    //fill list with map  files
    global.map_select = file_find_first("maps/"+ds_list_find_value(map_dir,i)+"/*.ubm",0);
    while(global.map_select != ""){
        ds_list_add(map_lists[i],global.map_select);
        global.map_select = file_find_next();
        }
    }  
//close fike actions
file_find_close();


//create list of maps***********************************************************
maps = map_lists[dir_index];
maps_index = global.vs_maps_index;

//initiate map data
cout_HQs    = 0; // index = 11
count_com   = 0; //15
count_base  = 0; //12
count_city  = 0; //13
count_tower = 0; //14
count_unit  = 0;

global.map_select =  ds_list_find_value(map_lists[dir_index],maps_index) ;

global.map = instance_create(0,0,obj_map);

if ( ds_list_size(map_lists[0]) &gt; 0 ){
    //create first map object
    scr_ubermap_load("maps/"+dir_select+"/"+ global.map_select);
    //make units visiable
    with(obj_unit){ 
        isObservable = true;
        other.count_unit +=1;
        }
    global.cap_max = 0;
    with obj_property {
        global.cap_max++;
        switch index {
            case 11 :
                other.cout_HQs +=1;
                break;
            case 15 :
                other.count_com +=1;
                break;
            case 12 :
                other.count_base +=1;
                break;
            case 13 :
                other.count_city +=1;
                break;
            case 14 :
                other.count_tower +=1;
                break;
            }
        }
    }

/*
global.map_select = file_find_first("maps/"+dir_select+"/*.ubm",0) ;
//populat list
while(global.map_select !=""){
    ds_list_add(maps,global.map_select);
    global.map_select = file_find_next();
    }
//create first map object
global.map = instance_create(0,0,obj_map);
scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(map_folders[0],0));
//make units visiable
with(obj_unit) isObservable = true;



    




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initiate positions and counters

//folder name pos
folder_posx = 60;
folder_posy = 77;

//window position relative to list
win_pos = global.vs_map_win_pos; //defaults a ttop of list, dispolays at position index one
win_size = 7; // from 0~6, first and last are drawn dark
//cursor position
cur_pos = global.vs_map_cur_pos; //0~6 in this case  


//initiate window and cursor position saves for each folder
sav_win = array_create(0); //save positions for window
sav_cur = array_create(0); //save positions of cursor 
sav_ind = array_create(0);//index of map in map lists
i = 0
for ( i=0 ; i&lt;ds_list_size(map_dir) ; i++){
    sav_win[i] = -1;
    sav_cur[i] = 1;
    //map list index
    sav_ind[i] = 0;
    }

//list startgin positions and size
list_startx = 59;
list_starty = 100;
list_space = 24; // space to next row

//drawing gold underline
underline_pos = 12; // for drawing gold line
underline_length = 212+40;

//scroll bar
barx = 350;
bary = 96;
barh = 165;
barw = 19;
bar_pos = 0;
bar_ratio = 1;
//adjust height 5/map list size
if (ds_list_size(maps) &gt; 5) bar_ratio = 5/ds_list_size(maps);





//tool tip
tip_posx = 24;
tip_posy = 400;
tip = "Select map!";



 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mouse control variables
//mouse pointer type (sprite index)
mouse_type = spr_mouseSlapper;
mouse_on = false; // true when mouse over a button

//next buttion frame index
b_next_frame = 0;
//back button
b_back_frame = 0; 

//page change buttons
page_next_frame = 3;
page_last_frame = 0;
page_up_frame   = 0;
page_down_frame = 0;

//scroll arrows
scroll_up_frame     = 0;
scroll_down_frame   = 0;

//mouse over
m_over = 0;
/*
0 - Open
1~5 pos 1~5
6 - page next
7 - page last
8 - page up
9 - page down

10 - next
11 - back

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initiate for mouse click delay
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///activate for juice
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check mouse over
//initiate mouse_on
mouse_on = false;
mouse_type = spr_mousePointer;


if (mouse_x&gt;48 and mouse_y&gt;95+24*1 and mouse_x&lt;335 and mouse_y&lt;118+24*1) m_over = 1;
else if (mouse_x&gt;48 and mouse_y&gt;95+24*2 and mouse_x&lt;335 and mouse_y&lt;118+24*2) m_over = 2;
else if (mouse_x&gt;48 and mouse_y&gt;95+24*3 and mouse_x&lt;335 and mouse_y&lt;118+24*3) m_over = 3;
else if (mouse_x&gt;48 and mouse_y&gt;95+24*4 and mouse_x&lt;335 and mouse_y&lt;118+24*4) m_over = 4;
else if (mouse_x&gt;48 and mouse_y&gt;95+24*5 and mouse_x&lt;335 and mouse_y&lt;118+24*5) m_over = 5;

else if (mouse_x&gt;48 and mouse_y&gt;95+24*0 and mouse_x&lt;335 and mouse_y&lt;118+24*0) m_over = 8;//up
else if (mouse_x&gt;48 and mouse_y&gt;95+24*6 and mouse_x&lt;335 and mouse_y&lt;118+24*6) m_over = 9;//down

else if (mouse_x&gt;347 and mouse_y&gt;73 and mouse_x&lt;370 and mouse_y&lt;94) m_over = 6; //next page
else if (mouse_x&gt;25 and mouse_y&gt;73 and mouse_x&lt;48 and mouse_y&lt;94)   m_over = 7; //last page

else if (mouse_x&gt;293 and mouse_x&lt;372 and mouse_y&gt;23 and mouse_y&lt;63)   m_over = 10; // NEXT
else if (mouse_x&gt;696 and mouse_x&lt;743 and mouse_y&gt;396 and mouse_y&lt;419) m_over = 11; // back
else{ 
    m_over = 0;
    mouse_type = spr_mouseSlapper;
    }




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mouse controns v.2
//using cursor key dely stuff
if mouse_check_button_pressed(mb_left) global.cursorKey_delay = global.cursorKey_startspeed;
if mouse_check_button_released(mb_left){
    alarm[2] = 0;
    global.cursorKey_delay = global.cursorKey_startspeed;
    }

//if (alarm[2]=-1 and mouse_check_button(mb_left)){
if (mouse_check_button_pressed(mb_left) ){
    switch m_over {
        case 1 : //pos 1
            if (win_pos+1 &lt; ds_list_size(maps)){
                 cur_pos = 1;
                 maps_index = win_pos + cur_pos;
                 global.map_select = ds_list_find_value(maps,maps_index);
                 scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
                 scr_map_select_count();
                 scr_cursorKey_juice(2,global.cursorKey_sfx);
                 }
             break;
        case 2 : //pos 1
            if ( win_pos+2 &lt; ds_list_size(maps)){
                cur_pos = 2;
                maps_index = win_pos + cur_pos;
                global.map_select = ds_list_find_value(maps,maps_index);
                scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
                scr_map_select_count();
                scr_cursorKey_juice(2,global.cursorKey_sfx);
                }
             break;
        case 3 : //pos 1
             if ( win_pos+3 &lt; ds_list_size(maps)){
                cur_pos = 3;
                maps_index = win_pos + cur_pos;
                global.map_select = ds_list_find_value(maps,maps_index);
                scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
                scr_map_select_count();
                scr_cursorKey_juice(2,global.cursorKey_sfx);
                }
             break;
        case 4 : //pos 1
             if ( win_pos+4 &lt; ds_list_size(maps)){
                cur_pos = 4;
                maps_index = win_pos + cur_pos;
                global.map_select = ds_list_find_value(maps,maps_index);
                scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
                scr_map_select_count();
                scr_cursorKey_juice(2,global.cursorKey_sfx);
                }
             break;
        case 5 : //pos 1
             if ( win_pos+5 &lt; ds_list_size(maps)){
                cur_pos = 5;
                maps_index = win_pos + cur_pos;
                global.map_select = ds_list_find_value(maps,maps_index);
                scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
                scr_map_select_count();
                scr_cursorKey_juice(2,global.cursorKey_sfx);
                }
             break;
        case 6 : // next page
            show_debug_message("mouse next page");
            //save window and cursor positions
            sav_cur[dir_index] = cur_pos;
            sav_win[dir_index] = win_pos;
            sav_ind[dir_index] = maps_index;
            //index increment
            dir_index ++;
            //loop around if at end
            if (dir_index &gt; ds_list_size(map_dir)-1) dir_index = 0;
            dir_select = ds_list_find_value(map_dir,dir_index);
            cur_pos = sav_cur[dir_index];
            win_pos = sav_win[dir_index];
            maps_index = sav_ind[dir_index];
            //laod new list
            maps = map_lists[dir_index];
            //check scroll bar changes
            if (ds_list_size(maps) &gt; 5) bar_ratio = 5/ds_list_size(maps);
            else bar_ratio = 1;
            //update bar pos
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            //load map
            global.map_select = ds_list_find_value(maps,0);
            if(ds_list_size(maps)&gt;0) scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index))
            scr_map_select_count();
            //juice
            page_next_frame = 5;
            scr_cursorKey_juice(2,global.cursorKey_sfx);
            break;
        case 7 : // last page
                //save window and cursor positions
            sav_cur[dir_index] = cur_pos;
            sav_win[dir_index] = win_pos;
            sav_ind[dir_index] = maps_index;
            //index increment
            dir_index --;
            //loop around if at end
            if (dir_index &lt; 0) dir_index = ds_list_size(map_dir)-1;
            dir_select = ds_list_find_value(map_dir,dir_index);
            cur_pos = sav_cur[dir_index];
            win_pos = sav_win[dir_index];
            maps_index = sav_ind[dir_index];
            //laod new list
            maps = map_lists[dir_index];
            //check scroll bar changes
            if (ds_list_size(maps) &gt; 5) bar_ratio = 5/ds_list_size(maps);
            else bar_ratio = 1;
            //update bar pos
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            //load map
            global.map_select = ds_list_find_value(maps,0);
            if(ds_list_size(maps)&gt;0) scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index))
            scr_map_select_count();
            //juice
            page_last_frame = 2;
            scr_cursorKey_juice(2,global.cursorKey_sfx);
            break;
        case 8 : //page up 
        //move up a full page if posible
        if (win_pos &gt;= 4 ){
            show_debug_message("up chack A");
            win_pos -= 5;
            cur_pos = 5;
            maps_index = win_pos + cur_pos;
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            global.map_select = ds_list_find_value(maps,maps_index);
            scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
            scr_map_select_count();
            scr_cursorKey_juice(2,global.cursorKey_sfx);
            }
        //short - move to top
        else if ( win_pos &gt; -1 ){
            show_debug_message("up check B");
            win_pos = -1;
            //set position vi last index
            cur_pos = maps_index - win_pos;
            if cur_pos &gt; 5 cur_pos = 5
            maps_index = win_pos + cur_pos;
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            scr_cursorKey_juice(2,global.cursorKey_sfx);
            }
        break;

        case 9 : //down 
        //move down a full page if posible
        if (win_pos+10 &lt; ds_list_size(maps)){
            show_debug_message("down check A");
            win_pos += 5;
            cur_pos = 1;
            maps_index = win_pos + cur_pos;
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            global.map_select = ds_list_find_value(maps,maps_index);
            scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
            scr_map_select_count();
            scr_cursorKey_juice(2,global.cursorKey_sfx);
            }
        // move to end if possible
        else if (win_pos+6 &lt; ds_list_size(maps)){
            show_debug_message("down check B");
            win_pos = ds_list_size(maps)-6;
            cur_pos = maps_index - win_pos;
            if cur_pos &lt; 1 cur_pos = 1;
            maps_index = win_pos + cur_pos;
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            global.map_select = ds_list_find_value(maps,maps_index);
            scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
            scr_map_select_count();
            scr_cursorKey_juice(2,global.cursorKey_sfx);
            }
        break;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///map list key nav

/// Navigation Ver.2 now with game pad controls

//      check for key delay on press
if (global.ip_up_pressed   ||
    global.ip_down_pressed ||
    global.ip_left_pressed ||
    global.ip_right_pressed){
        global.cursorKey_delay = global.cursorKey_startspeed;
        }
        
//      reset key delay on release
if (global.ip_up_released   ||
    global.ip_down_released ||
    global.ip_left_released ||
    global.ip_right_released){
        alarm[1] = 0;
        global.cursorKey_delay = global.cursorKey_startspeed ;
        }

if (alarm[1] = -1 ){
    //button hover over
    page_next_frame = 3;
    page_last_frame = 0;


     switch(global.ip_nav){
        //reset
        case 0 :
            alarm[1] = 0;
            global.cursorkey_delay = global.cursorKey_startspeed ;
            //if (isOnGlobalRadioCheck = false and checking_attack_range = false and checking_move_range = false) scr_rangeCheck_reset();   
            break;
        case 2 : //down
            maps_index ++;
            if (maps_index &gt; ds_list_size(maps)-1) maps_index = ds_list_size(maps)-1; //keep at end of list
            else{
                global.map_select = ds_list_find_value(maps,maps_index);
                scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
                scr_map_select_count();
                }
            //move cursor position
            if (cur_pos &lt; 5 and win_pos+cur_pos &lt; ds_list_size(maps)-1 ) cur_pos++;
            else if (maps_index-win_pos &gt; 5){ 
                win_pos+=1;
                //update bar pos
                bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
                }
            //juice
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        case 8 :
            maps_index --;
            //loop around if at end
            if (maps_index &lt; 0 ) maps_index = 0;
            else {
                global.map_select = ds_list_find_value(maps,maps_index);
                scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index));
                scr_map_select_count();
                }
            //move cursor position
            if (cur_pos &gt; 1) cur_pos--;
            else if (maps_index-win_pos &lt; 1){ 
                win_pos-=1;
                //update bar pos
                bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
                }
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        case 6 : // next page
            //save window and cursor positions
            sav_cur[dir_index] = cur_pos;
            sav_win[dir_index] = win_pos;
            sav_ind[dir_index] = maps_index;
            //index increment
            dir_index ++;
            //loop around if at end
            if (dir_index &gt; ds_list_size(map_dir)-1) dir_index = 0;
            dir_select = ds_list_find_value(map_dir,dir_index);
            cur_pos = sav_cur[dir_index];
            win_pos = sav_win[dir_index];
            maps_index = sav_ind[dir_index];
            //laod new list
            maps = map_lists[dir_index];
            //check scroll bar changes
            if (ds_list_size(maps) &gt; 5) bar_ratio = 5/ds_list_size(maps);
            else bar_ratio = 1;
            //update bar pos
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            //load map
            global.map_select = ds_list_find_value(maps,0);
            if(ds_list_size(maps)&gt;0) scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index))
            scr_map_select_count();
            //juice
            page_next_frame = 5;
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        case 4 : // last page
            //save window and cursor positions
            sav_cur[dir_index] = cur_pos;
            sav_win[dir_index] = win_pos;
            sav_ind[dir_index] = maps_index;
            //index increment
            dir_index --;
            //loop around if at end
            if (dir_index &lt; 0) dir_index = ds_list_size(map_dir)-1;
            dir_select = ds_list_find_value(map_dir,dir_index);
            cur_pos = sav_cur[dir_index];
            win_pos = sav_win[dir_index];
            maps_index = sav_ind[dir_index];
            //laod new list
            maps = map_lists[dir_index];
            //check scroll bar changes
            if (ds_list_size(maps) &gt; 5) bar_ratio = 5/ds_list_size(maps);
            else bar_ratio = 1;
            //update bar pos
            bar_pos = (barh/ds_list_size(maps))*(win_pos+1);
            //load map
            global.map_select = ds_list_find_value(maps,0);
            if(ds_list_size(maps)&gt;0) scr_ubermap_load("maps/"+dir_select+"/"+ ds_list_find_value(maps,maps_index))
            scr_map_select_count();
            //juice
            page_last_frame = 2;
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        }
    }

/*
//dir nav

if (global.ip_right_pressed){
    dir_index ++;
    //loop around if at end
    if (dir_index &gt; ds_list_size(map_dir)-1) dir_index = 0;
    }
if (global.ip_left_pressed){
    dir_index --;
    //loop around if at end
    if (dir_index &lt; 0) dir_index = ds_list_size(map_dir)-1;
    }    
dir_select = ds_list_find_value(map_dir,dir_index);

    
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Next &amp; back

//Back
if (global.ip_B_pressed or (m_over=11 and mouse_check_button_pressed(mb_left)) or mouse_check_button_pressed(mb_right)){ 
    //save cursor and win positions
    global.vs_map_dir_index = dir_index;
    global.vs_maps_index    = maps_index;
    global.vs_map_win_pos   = win_pos;
    global.vs_map_cur_pos   = cur_pos; 
    //??? i gorget what this does
    b_back_frame = 2;
    //destroy map lists for each map folder
    var i=0;
    for (i=0;i&lt;ds_list_size(map_dir);i++){
        ds_list_destroy(map_lists[i]);
        }
    //desoty maps dir
    ds_list_destroy(map_dir);
    room_goto(rm_Title_Screen);
    }
    
    
//Next
if (global.ip_A_pressed or (m_over=10 and mouse_check_button_pressed(mb_left))){
    //save cursor and win positions
    global.vs_map_dir_index = dir_index;
    global.vs_maps_index    = maps_index;
    global.vs_map_win_pos   = win_pos;
    global.vs_map_cur_pos   = cur_pos; 
    //save ,ap file path name 
    global.map_select = "maps/"+dir_select+"/"+global.map_select;
      var i=0;
    for (i=0;i&lt;ds_list_size(map_dir);i++){
        ds_list_destroy(map_lists[i]);
        }
    //desoty maps dir
    ds_list_destroy(map_dir);
    room_goto(rm_setup);
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse over graphic switch
switch (m_over){
    case 0 :
        //button hover over
        //page_next_frame = 3;
        //page_last_frame = 0;
        b_next_frame    = 0;
        b_back_frame    = 0;
        break;
    case 6 : // next page
        page_next_frame = 4;
        if mouse_check_button(mb_left) page_next_frame = 5;
        break;
    case 7 : // las tage
         page_last_frame = 1;
         if mouse_check_button(mb_left) page_last_frame = 2;
         break;
    case 10 : // NEXT
        b_next_frame = 1;
        if mouse_check_button(mb_left) b_next_frame = 2;
        break;
    case 11:
        b_back_frame = 1;
        if mouse_check_button(mb_left) b_back_frame = 2;
        break;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
//draw_text(24,2,"dir: "+string(dir_index) + "  cur: "+string(cur_pos) + "  map: "+string(maps_index) +" check -  "+string(win_pos+1) );
//draw_text(24,2, "frame delay: " + string(global.cursorKey_startspeed)) 

//draw_text(300,48-28,"Radio: " + string(bar_ratio)); 
//draw_text(300,48,"index: " + string(win_pos+cur_pos)); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw stuff
draw_self();


    //list of map folder name
    draw_text(folder_posx,folder_posy,dir_select);
if (ds_list_size(maps)&gt;0){    
    // draw gold line
    draw_set_colour(global.c_uiGold);
    draw_line(list_startx ,list_starty+underline_pos+cur_pos*24, list_startx+underline_length ,list_starty+underline_pos+cur_pos*24);
    draw_set_colour(global.c_uiWhite);
    //draw cursor
    draw_sprite( spr_list_cursor_left, global.cursorFrameIndex , list_startx , list_starty+underline_pos+cur_pos*24 );
    draw_sprite( spr_list_cursor_right, global.cursorFrameIndex , list_startx+underline_length , list_starty+underline_pos+cur_pos*24 );
    
    
    //draw list of maps
    var i = 0;
    for ( i=0 ; i &lt; ds_list_size(maps) ; i++ ){
        
        if (  i=win_pos or i=win_pos+6 ){
            draw_set_colour(global.c_uiLineGrey);
            draw_text(list_startx,list_starty-win_pos*24+list_space*i,ds_list_find_value(maps,i));
            draw_set_colour(global.c_uiWhite);
            } 
           else if ( i&gt;win_pos and i&lt;win_pos+6 ) draw_text(list_startx,list_starty-win_pos*24+list_space*i,ds_list_find_value(maps,i));
        }
        
       //draw tool tip
       draw_text(tip_posx,tip_posy,tip);
}

else{
    //draw cursor
    draw_sprite( spr_list_cursor_left, global.cursorFrameIndex , list_startx , list_starty+underline_pos+24 );
    draw_sprite( spr_list_cursor_right, global.cursorFrameIndex , list_startx+underline_length , list_starty+underline_pos+24 );
    }
    
//draw map data    
scr_draw_num(spr_num_light,false,cout_HQs,107,312,2);
scr_draw_num(spr_num_light,false,count_com,209,312,2);
scr_draw_num(spr_num_light,false,count_base,311,312,2);
scr_draw_num(spr_num_light,false,count_city,107,354,2);
scr_draw_num(spr_num_light,false,count_tower,209,354,2);
scr_draw_num(spr_num_light,false,count_unit,311,354,2);






    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw bars and buttons

draw_set_colour(global.c_uiLineGrey);
draw_rectangle(barx,bary+bar_pos,barx+barw,bary+barh*bar_ratio+bar_pos,0);
draw_set_colour(global.c_uiWhite);

/*
//draw arrows
draw_sprite(spr_scroll_arrows,scroll_up_frame, barx , bary-22 );
draw_sprite(spr_scroll_arrows,scroll_down_frame, barx , bary+barh+3 );
*/

//draw folder arows
draw_sprite(spr_page_arrows,page_last_frame,24+2,74);
draw_sprite(spr_page_arrows,page_next_frame,barx-2 ,74);
//page up/donw
if m_over = 8 {
    draw_set_colour(global.c_uiLineGrey);
    draw_rectangle(48-24+2,95+24*0+1,335+12,118+24*0-1,0);
    draw_sprite(spr_list_arrows,1,  168, 96+2);
    draw_set_colour(global.c_uiWhite);
    }
else if m_over = 9 {
    draw_set_colour(global.c_uiLineGrey);
    draw_rectangle(26,240,347,261,0);
    draw_sprite(spr_list_arrows,4,168,240+2);
    draw_set_colour(global.c_uiWhite);
    }




//draw Next button
draw_sprite(spr_next_button,b_next_frame,294,24);
//back button
draw_sprite(spr_back_button,b_back_frame,696,396);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw minimap

if (ds_list_size(maps)&gt;0){

 //set strting pos
    //var y_adjust = 0;
    var startx  =   384 + ( (360-global.mapW*8) div 2  );
    var starty  =   24 + ( (360-global.mapH*8) div 2  );
    //draw outline
    //draw_rectangle_colour(384,24,384+360,24+360,global.c_uiLineGrey,global.c_uiLineGrey,global.c_uiLineGrey,global.c_uiLineGrey,true)
    //draw shadow
    draw_rectangle_colour(startx+2, starty+2, startx+1+global.mapW*8, starty+1+global.mapH*8,c_black,c_black,c_black,c_black,false);
    //draw pos
    var xx = 0;
    var yy = 0;
    //loop vars
    var i = 0;
    var j = 0;
    //visibiilty colour mix
    var vis = c_gray;
    
    for( i=0 ; i&lt;global.mapW ; i++){ 
        for( j=0 ; j&lt;global.mapH ; j++ ){
            //set draw pos
            xx = startx+(i*8);
            yy = starty+(j*8);
            //check visibility
            if global.map.terrains[i,j].isObservable vis = c_white;
            else vis = c_gray;
            //draw terrain
            switch global.map.terrains[i,j].name{
                case "Sea" :
                    draw_sprite_ext(spr_minimap_sea,0,xx,yy,1,1,0,vis,1);
                    break; 
                case "Plains" :
                    draw_sprite_ext(spr_minimap_plains,0,xx,yy,1,1,0,vis,1);
                    break;
                case "Road" :
                    draw_sprite_ext(spr_minimap_road,global.map.terrains[i,j].image_index,xx,yy,1,1,0,vis,1);
                    break;
                case "Mountain" :
                    draw_sprite_ext(spr_minimap_mountain,0,xx,yy,1,1,0,vis,1);
                    break;
               case "Woods" :
                    draw_sprite_ext(spr_minimap_woods,0,xx,yy,1,1,0,vis,1);
                    break;
               case ("HQ") :
                    draw_sprite_ext(spr_minimap_HQ,global.map.terrains[i,j].image_index,xx,yy,1,1,0,vis,1);
                    draw_sprite(spr_minimap_property,5,xx,yy);
                    break;
               case ("City") :
                    draw_sprite_ext(spr_minimap_property,global.map.terrains[i,j].image_index,xx,yy,1,1,0,vis,1);
                    break;
               case ("Base") :
                    draw_sprite_ext(spr_minimap_property,global.map.terrains[i,j].image_index,xx,yy,1,1,0,vis,1);
                    break;
               case ("Radio Tower") :
                    draw_sprite_ext(spr_minimap_property,global.map.terrains[i,j].image_index,xx,yy,1,1,0,vis,1);
                    break;
               case ("Command Post") :
                    draw_sprite_ext(spr_minimap_property,global.map.terrains[i,j].image_index,xx,yy,1,1,0,vis,1);
                    draw_sprite(spr_minimap_property,5,xx,yy);
                    break;
               case ("River") :
                    draw_sprite_ext(spr_minimap_river,global.map.terrains[i,j].crossindex,xx,yy,1,1,0,vis,1);
                    break;
               case ("River Bridge") :
                    draw_sprite_ext(spr_minimap_river,global.map.terrains[i,j].crossindex,xx,yy,1,1,0,vis,1);
                    draw_sprite_ext(spr_minimap_bridge,global.map.terrains[i,j].crossing,xx,yy,1,1,0,vis,1);
                    break;
               case ("Sea Bridge") :
                    draw_sprite_ext(spr_minimap_sea,0,xx,yy,1,1,0,vis,1);
                    draw_sprite_ext(spr_minimap_bridge,global.map.terrains[i,j].crossing,xx,yy,1,1,0,vis,1);
                    break;
                      
                }
            //draw smoke screen
            if(global.map.terrains[i,j].isSmoke){
                var t_check = global.map.terrains[i,j];
                draw_sprite_ext(spr_mini_smoke,t_check.smoke_left,xx,yy,1,1,0,c_white,global.glow);
                }
            
            ///draw unit on blink
            if(global.map.units[i,j] !=0 and global.blinking){
                if(global.map.units[i,j].isObservable) {
                    draw_sprite(spr_minimap_unit,global.map.units[i,j].ownership,xx,yy);
                    if(global.map.units[i,j].isCommander) draw_sprite(spr_minimap_unit,0,xx,yy);
                    }
                }
            }
        }

    
    //return to UI white
    draw_set_colour(global.c_uiWhite );
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW MOUSE
draw_sprite(mouse_type,0, mouse_x, mouse_y);
//debug
//draw_text(mouse_x+24,mouse_y+24,string(b_back_frame));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
